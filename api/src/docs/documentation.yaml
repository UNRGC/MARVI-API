openapi: 3.1.0
info:
  title: MARVI-API
  description: API diseñada establecer comunicación con la base de datos de lavandería MARVI
  version: 1.0.1

servers:
  - url: https://marvi-api.onrender.com
    description: Servidor del API

paths:
  /users:
    post:
      summary: Crear usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                usuario:
                  type: string
                  example: Persona1
                nombre:
                  type: string
                  example: Juan
                primer_apellido:
                  type: string
                  example: Peréz
                segundo_apellido:
                  type: string
                  example: García
                correo:
                  type: string
                  example: alguien@servidor.com
                telefono:
                  type: string
                  example: "1234567891"
                rol:
                  type: string
                  example: U
      responses:
        "201":
          description: Usuario creado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El usuario Persona1 se ha creado correctamente
        "500":
          description: Error al registrar usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al registrar usuario, El usuario, correo o teléfono ya existen

    put:
      summary: Actualizar usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_usuario:
                  type: string
                  example: "2"
                usuario:
                  type: string
                  example: Persona1
                nombre:
                  type: string
                  example: Juan
                primer_apellido:
                  type: string
                  example: Peréz
                segundo_apellido:
                  type: string
                  example: García
                correo:
                  type: string
                  example: alguien@servidor.com
                telefono:
                  type: string
                  example: "1234567891"
                contrasena:
                  type: string
                  example: "12345678"
                foto_src:
                  type: string
                  example: foto1/foto.jpg
      responses:
        "200":
          description: Usuario actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El usuario Persona1 se ha actualizado correctamente
        "500":
          description: Error al actualizar usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al actualizar usuario, El usuario, correo o teléfono ya existen

    get:
      summary: Consultar usuarios
      parameters:
        - name: columna_orden
          in: query
          schema:
            type: string
          example: usuario
        - name: orden
          in: query
          schema:
            type: string
          example: ASC
        - name: limit
          in: query
          schema:
            type: string
          example: "10"
        - name: offset
          in: query
          schema:
            type: string
          example: "0"
      responses:
        "200":
          description: Usuarios filtrados
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    total:
                      type: string
                      example: "2"
                    usuario:
                      type: string
                      example: Admin
                    nombre_completo:
                      type: string
                      example: Administrador Sistema Web
                    correo:
                      type: string
                      example: admin@admin.com
                    rol_usuario:
                      type: string
                      example: Administrador
                    estado:
                      type: string
                      example: Inactivo
                    fecha_registro:
                      type: string
                      example: 25/03/2025

  /users/{usuario}:
    get:
      summary: Consultar usuario
      parameters:
        - name: usuario
          in: path
          required: true
          schema:
            type: string
          example: Persona1
      responses:
        "200":
          description: Usuario consultado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id_usuario:
                    type: integer
                    example: 2
                  usuario:
                    type: string
                    example: Persona1
                  nombre:
                    type: string
                    example: Juan
                  primer_apellido:
                    type: string
                    example: Peréz
                  segundo_apellido:
                    type: string
                    example: García
                  correo:
                    type: string
                    example: alguien@servidor.com
                  telefono:
                    type: string
                    example: "1234567891"
                  contrasena:
                    type: string
                    example: "12345678"
                  temporal:
                    type: boolean
                    example: true
                  rol:
                    type: string
                    example: U
                  estado:
                    type: string
                    example: Inactivo
                  fecha_registro:
                    type: string
                    example: 25/03/2025
                  ultima_actividad:
                    type: string
                    example: 26/03/2025 11:01:58
                  foto_src:
                    type: string
                    nullable: true
                  activo:
                    type: boolean
                    example: true

    delete:
      summary: Eliminar usuario
      parameters:
        - name: usuario
          in: path
          required: true
          schema:
            type: string
          example: Persona1
      responses:
        "200":
          description: Usuario eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El usuario Persona1 se ha eliminado correctamente
        "500":
          description: Error al eliminar usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al eliminar usuario, El usuario no existe o esta siendo utilizado

  /users/search:
    get:
      summary: Buscar usuarios
      parameters:
        - name: busqueda
          in: query
          required: true
          schema:
            type: string
          example: Persona
        - name: limit
          in: query
          schema:
            type: string
          example: "10"
        - name: offset
          in: query
          schema:
            type: string
          example: "0"
      responses:
        "200":
          description: Usuarios encontrados
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    total:
                      type: string
                      example: "1"
                    usuario:
                      type: string
                      example: Persona1
                    nombre_completo:
                      type: string
                      example: Juan Peréz García
                    correo:
                      type: string
                      example: alguien@servidor.com
                    rol_usuario:
                      type: string
                      example: Usuario
                    estado:
                      type: string
                      example: Inactivo
                    fecha_registro:
                      type: string
                      example: 25/03/2025
        "500":
          description: Búsqueda vacía
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al obtener usuarios, La búsqueda está vacía

  /users/active:
    get:
      summary: Consultar usuarios activos
      responses:
        "200":
          description: Usuarios activos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    usuario:
                      type: string
                      example: Persona1
                    nombre_usuario:
                      type: string
                      example: Juan Peréz
                    rol_usuario:
                      type: string
                      example: Usuario
                    ultima_actividad:
                      type: string
                      example: 26/03/2025 11:07:12

  /users/role:
    put:
      summary: Cambiar rol usuario
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_usuario:
                  type: string
                  example: "2"
                rol:
                  type: string
                  example: U
      responses:
        "200":
          description: Usuario actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El usuario Persona1 se ha actualizado correctamente
        "500":
          description: Error al cambiar rol
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al cambiar el rol de usuario, El usuario no existe

  /login:
    post:
      summary: Iniciar sesión
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                usuario:
                  type: string
                  example: Persona1
                contrasena:
                  type: string
                  example: "12345678"
      responses:
        "200":
          description: Usuario iniciado
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        "401":
          description: Credenciales incorrectas
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Credenciales incorrectas
        "500":
          description: Error al iniciar sesión
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al iniciar sesión, El usuario no existe o se encuentra activo

    delete:
      summary: Cerrar sesion
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                usuario:
                  type: string
                  example: Persona1
      responses:
        "200":
          description: Usuario cerrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El usuario Persona1 ha cerrado sesión correctamente
        "500":
          description: Error al cerrar sesión
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al cerrar sesión, El usuario no existe o se encuentra inactivo

  /login/logout:
    delete:
      summary: Cerrar sesiones
      responses:
        "200":
          description: Sesiones cerradas
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Se cerraron todas las sesiones

  /login/forgot:
    post:
      summary: Recuperar contraseña
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                correo:
                  type: string
                  example: alguien@servidor.com
      responses:
        "200":
          description: Correo enviado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Correo de recuperación enviado
        "500":
          description: Error al recuperar contraseña
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al recuperar la contraseña, El correo no existe

  /email/send:
    post:
      summary: Enviar correo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                destino:
                  type: string
                  example: resvmm@gmail.com
                asunto:
                  type: string
                  example: Correo de prueba
                mensaje:
                  type: string
                  example: Este es un correo de prueba, favor de no contestar
      responses:
        "200":
          description: Correo enviado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Correo enviado correctamente

  /references/unit:
    post:
      summary: Crear unidad
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                unidad:
                  type: string
                  example: MTR
                nombre:
                  type: string
                  example: Metro
      responses:
        "201":
          description: Unidad creada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: La unidad metro se ha agregado correctamente
        "500":
          description: Error al registrar unidad
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al registrar unidad, La unidad ya existe

    put:
      summary: Actualizar unidad
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                unidad:
                  type: string
                  example: MTR
                nombre:
                  type: string
                  example: Metro cuadrado
      responses:
        "200":
          description: Unidad actualizada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: La unidad metro cuadrado se actualizo correctamente

    get:
      summary: Consultar unidades
      responses:
        "200":
          description: Unidades
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    unidad:
                      type: string
                      example: N/A
                    nombre:
                      type: string
                      example: Ninguna

  /references/unit/{unidad}:
    get:
      summary: Consultar unidad
      parameters:
        - name: unidad
          in: path
          required: true
          schema:
            type: string
          example: MTR
      responses:
        "200":
          description: Unidad consultada
          content:
            application/json:
              schema:
                type: object
                properties:
                  unidad:
                    type: string
                    example: MTR
                  nombre:
                    type: string
                    example: Metro cuadrado
        "500":
          description: Error al obtener unidad
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al obtener unidad, La unidad no existe

    delete:
      summary: Eliminar unidad
      parameters:
        - name: unidad
          in: path
          required: true
          schema:
            type: string
          example: MTR
      responses:
        "200":
          description: Unidad eliminada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: La unidad metro cuadrado se ha eliminado correctamente
        "500":
          description: Error al eliminar unidad
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al eliminar unidad, La unidad no existe

  /references/frequency:
    post:
      summary: Crear frecuencia compra
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                frecuencia:
                  type: string
                  example: TRI
                nombre:
                  type: string
                  example: Trimestral
                dias:
                  type: string
                  example: "90"
                descripcion:
                  type: string
                  example: Compra cada 90 días
      responses:
        "201":
          description: Frecuencia creada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: La frecuencia de compra trimestral se ha agregado correctamente
        "500":
          description: Error al registrar frecuencia
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al registrar frecuencia de compra, La frecuencia de compra ya existe

    put:
      summary: Actualizar frecuencia compra
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                frecuencia:
                  type: string
                  example: TRI
                nombre:
                  type: string
                  example: Trimestral
                dias:
                  type: string
                  example: "90"
                descripcion:
                  type: string
                  example: Compra cada 3 meses
      responses:
        "200":
          description: Frecuencia actualizada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: La frecuencia de compra trimestral se ha actualizado correctamente
        "500":
          description: Error al actualizar frecuencia
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al actualizar frecuencia de compra, La frecuencia de compra no puede ser actualizada

    get:
      summary: Consultar frecuencias compra
      responses:
        "200":
          description: Frecuencias
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    frecuencia:
                      type: string
                      example: N/A
                    nombre:
                      type: string
                      example: Ninguna
                    descripcion:
                      type: string
                      nullable: true
                    dias:
                      type: integer
                      example: 0

  /references/frequency/{frecuencia}:
    get:
      summary: Consultar frecuencia compra
      parameters:
        - name: frecuencia
          in: path
          required: true
          schema:
            type: string
          example: TRI
      responses:
        "200":
          description: Frecuencia consultada
          content:
            application/json:
              schema:
                type: object
                properties:
                  frecuencia:
                    type: string
                    example: TRI
                  nombre:
                    type: string
                    example: Trimestral
                  descripcion:
                    type: string
                    example: Compra cada 90 días
                  dias:
                    type: integer
                    example: 90
        "500":
          description: Error al obtener frecuencia
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al obtener frecuencia de compra, La frecuencia de compra no existe

    delete:
      summary: Eliminar frecuencia compra
      parameters:
        - name: frecuencia
          in: path
          required: true
          schema:
            type: string
          example: TRI
      responses:
        "200":
          description: Frecuencia eliminada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: La frecuencia de compra trimestral se ha eliminado correctamente
        "500":
          description: Error al eliminar frecuencia
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al eliminar frecuencia de compra, La frecuencia de compra no existe

  /products:
    post:
      summary: Crear producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                codigo:
                  type: string
                  example: P1
                nombre:
                  type: string
                  example: Producto 1
                precio:
                  type: string
                  example: "9.99"
                unidad:
                  type: string
                  example: KG
                descripcion:
                  type: string
                  example: Producto 1
                recordatorio:
                  type: string
                  example: "false"
                frecuencia:
                  type: string
                  example: N/A
      responses:
        "201":
          description: Producto creado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El producto producto 1 se ha registrado correctamente
        "500":
          description: Error al registrar producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al registrar producto, El producto ya existe

    put:
      summary: Actualizar producto
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_producto:
                  type: string
                  example: "1"
                codigo:
                  type: string
                  example: P-01
                nombre:
                  type: string
                  example: Producto 1
                precio:
                  type: string
                  example: "19.99"
                unidad:
                  type: string
                  example: PZA
                descripcion:
                  type: string
                  example: Producto 1
                recordatorio:
                  type: string
                  example: "TRUE"
                frecuencia:
                  type: string
                  example: S
      responses:
        "200":
          description: Producto actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El producto producto 1 se ha actualizado correctamente
        "500":
          description: Error al actualizar producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al actualizar producto, El producto no existe

    get:
      summary: Consultar productos
      parameters:
        - name: columna_orden
          in: query
          schema:
            type: string
          example: codigo
        - name: orden
          in: query
          schema:
            type: string
          example: ASC
        - name: limit
          in: query
          schema:
            type: string
          example: "10"
        - name: offset
          in: query
          schema:
            type: string
          example: "0"
      responses:
        "200":
          description: Productos filtrados
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    total:
                      type: string
                      example: "1"
                    codigo:
                      type: string
                      example: P-01
                    nombre:
                      type: string
                      example: Producto 1
                    precio:
                      type: string
                      example: "19.99"
                    nombre_unidad:
                      type: string
                      example: Pieza
                    nombre_frecuencia:
                      type: string
                      example: Semanal
                    ultima_compra:
                      type: string
                      nullable: true

  /products/{codigo}:
    get:
      summary: Consultar producto
      parameters:
        - name: codigo
          in: path
          required: true
          schema:
            type: string
          example: P-01
      responses:
        "200":
          description: Producto consultado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id_producto:
                    type: integer
                    example: 1
                  codigo:
                    type: string
                    example: P-01
                  nombre:
                    type: string
                    example: Producto 1
                  descripcion:
                    type: string
                    example: Producto 1
                  precio:
                    type: string
                    example: "19.99"
                  unidad:
                    type: string
                    example: PZA
                  recordatorio:
                    type: boolean
                    example: true
                  frecuencia:
                    type: string
                    example: S
                  ultima_compra:
                    type: string
                    nullable: true
                  proxima_compra:
                    type: string
                    nullable: true
                  activo:
                    type: boolean
                    example: true
        "500":
          description: Error al obtener producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al obtener producto, El producto no existe

    delete:
      summary: Eliminar producto
      parameters:
        - name: codigo
          in: path
          required: true
          schema:
            type: string
          example: P-01
      responses:
        "200":
          description: Producto eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El producto producto 1 se ha eliminado correctamente
        "500":
          description: Error al eliminar producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al eliminar producto, El producto no existe

  /products/search:
    get:
      summary: Buscar productos
      parameters:
        - name: busqueda
          in: query
          required: true
          schema:
            type: string
          example: Producto
        - name: limit
          in: query
          schema:
            type: string
          example: "10"
        - name: offset
          in: query
          schema:
            type: string
          example: "0"
      responses:
        "200":
          description: Productos encontrados
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    total:
                      type: string
                      example: "1"
                    codigo:
                      type: string
                      example: P-01
                    nombre:
                      type: string
                      example: Producto 1
                    precio:
                      type: string
                      example: "19.99"
                    nombre_unidad:
                      type: string
                      example: Pieza
                    nombre_frecuencia:
                      type: string
                      example: Semanal
                    ultima_compra:
                      type: string
                      nullable: true
        "500":
          description: Búsqueda vacía
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al buscar productos, La búsqueda esta vacía

  /products/nextPurchase:
    post:
      summary: Crear proxima compra
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                codigo:
                  type: string
                  example: P-01
                proxima_compra:
                  type: string
                  example: "2025-03-25"
      responses:
        "200":
          description: Próxima compra creada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El producto producto 1 se ha actualizado correctamente
        "500":
          description: Error al crear próxima compra
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al crear próxima compra, El producto no existe

  /services:
    post:
      summary: Crear servicio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                codigo:
                  type: string
                  example: SE1
                nombre:
                  type: string
                  example: Servicio 1
                precio:
                  type: string
                  example: "9.99"
                unidad:
                  type: string
                  example: KG
                descripcion:
                  type: string
                  example: Servicio 1
      responses:
        "201":
          description: Servicio creado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El servicio servicio 1 se ha registrado correctamente
        "500":
          description: Error al registrar servicio
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al registrar servicio, El servicio ya existe

    put:
      summary: Actualizar servicio
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                id_servicio:
                  type: string
                  example: "1"
                codigo:
                  type: string
                  example: SE-01
                nombre:
                  type: string
                  example: Servicio 1
                precio:
                  type: string
                  example: "19.99"
                unidad:
                  type: string
                  example: PZA
                descripcion:
                  type: string
                  example: Servicio 1 actualizado
      responses:
        "200":
          description: Servicio actualizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El servicio servicio 1 se ha actualizado correctamente
        "500":
          description: Error al actualizar servicio
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al actualizar servicio, El servicio no existe

    get:
      summary: Consultar servicios
      parameters:
        - name: columna_orden
          in: query
          schema:
            type: string
          example: codigo
        - name: orden
          in: query
          schema:
            type: string
          example: ASC
        - name: limit
          in: query
          schema:
            type: string
          example: "10"
        - name: offset
          in: query
          schema:
            type: string
          example: "0"
      responses:
        "200":
          description: Servicios filtrados
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    total:
                      type: string
                      example: "1"
                    codigo:
                      type: string
                      example: SE-01
                    nombre:
                      type: string
                      example: Servicio 1
                    precio:
                      type: string
                      example: "19.99"
                    nombre_unidad:
                      type: string
                      example: Pieza
                    descripcion:
                      type: string
                      example: Servicio 1 actualizado

  /services/{codigo}:
    get:
      summary: Consultar servicio
      parameters:
        - name: codigo
          in: path
          required: true
          schema:
            type: string
          example: SE-01
      responses:
        "200":
          description: Servicio consultado
          content:
            application/json:
              schema:
                type: object
                properties:
                  id_servicio:
                    type: integer
                    example: 1
                  codigo:
                    type: string
                    example: SE-01
                  nombre:
                    type: string
                    example: Servicio 1
                  descripcion:
                    type: string
                    example: Servicio 1 actualizado
                  precio:
                    type: string
                    example: "19.99"
                  unidad:
                    type: string
                    example: PZA
                  activo:
                    type: boolean
                    example: true
        "500":
          description: Error al obtener servicio
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al obtener servicio, El servicio no existe

    delete:
      summary: Eliminar servicio
      parameters:
        - name: codigo
          in: path
          required: true
          schema:
            type: string
          example: SE-01
      responses:
        "200":
          description: Servicio eliminado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: El servicio servicio 1 se ha eliminado correctamente
        "500":
          description: Error al eliminar servicio
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al eliminar servicio, El servicio no existe

  /services/search:
    get:
      summary: Buscar servicios
      parameters:
        - name: busqueda
          in: query
          required: true
          schema:
            type: string
          example: Servicio
        - name: limit
          in: query
          schema:
            type: string
          example: "10"
        - name: offset
          in: query
          schema:
            type: string
          example: "0"
      responses:
        "200":
          description: Servicios encontrados
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    total:
                      type: string
                      example: "1"
                    codigo:
                      type: string
                      example: SE-01
                    nombre:
                      type: string
                      example: Servicio 1
                    precio:
                      type: string
                      example: "19.99"
                    nombre_unidad:
                      type: string
                      example: Pieza
                    descripcion:
                      type: string
                      example: Servicio 1 actualizado
        "500":
          description: Búsqueda vacía
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Error al buscar servicios, La búsqueda esta vacía
